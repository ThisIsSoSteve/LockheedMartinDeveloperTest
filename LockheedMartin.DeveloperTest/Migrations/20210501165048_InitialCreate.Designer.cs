// <auto-generated />
using System;
using LockheedMartin.DeveloperTest.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LockheedMartin.DeveloperTest.Migrations
{
    [DbContext(typeof(ForecastDbContext))]
    [Migration("20210501165048_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LockheedMartin.DeveloperTest.DAL.Models.ForecastTemperature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<Guid>("ForecastWeekId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("TemperatureC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ForecastWeekId");

                    b.ToTable("ForecastTemperatures");
                });

            modelBuilder.Entity("LockheedMartin.DeveloperTest.DAL.Models.ForecastWeek", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("ForecastWeeks");
                });

            modelBuilder.Entity("LockheedMartin.DeveloperTest.DAL.Models.ForecastTemperature", b =>
                {
                    b.HasOne("LockheedMartin.DeveloperTest.DAL.Models.ForecastWeek", "ForecastWeek")
                        .WithMany("Temperatures")
                        .HasForeignKey("ForecastWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ForecastWeek");
                });

            modelBuilder.Entity("LockheedMartin.DeveloperTest.DAL.Models.ForecastWeek", b =>
                {
                    b.Navigation("Temperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
